#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#define LETTER 1
#define NOT_THE_LETTER 0
#define MAXLEN 1000
int a = 0;
void main(void)
{
	HANDLE hStdout;
	FILE *fp;
	char line[MAXLEN];
	char word[MAXLEN];
	char mass[3][32] = { "char","int" };
	char vPer[10][50];
	int i,j=0,k;
	int flag;
	int prev_flag;
	int copy_flag = 0;
	int correct_flag = 1;
	char *ptr;
	WORD foregroundColor0;
	WORD textAttribute;
	hStdout = GetStdHandle(STD_OUTPUT_HANDLE);
	foregroundColor0 = FOREGROUND_INTENSITY | FOREGROUND_GREEN;
	fp = fopen("test.txt", "rt");
	if (fp == NULL)
		return;
	while (!feof(fp))
	{
		ptr = fgets(line, MAXLEN, fp);
		if (ptr == NULL)
			break;
		i = 0;
		prev_flag = flag = NOT_THE_LETTER;
		word[0] = '\0';
		while (*ptr != 0)
		{
			prev_flag = flag;
			SetConsoleTextAttribute(hStdout, 7);
			if (*ptr == ' ' || *ptr == ',' || *ptr == '.' || *ptr == '\n' || *ptr == ';' || *ptr == '[' || *ptr == ']' || *ptr == '+' || *ptr == '\t')
				flag = NOT_THE_LETTER;
			else
				flag = LETTER;
			if (flag != prev_flag)
			{
				word[i] = '\0';
				if (prev_flag && copy_flag)
				{
					strcpy(vPer[j++], word);
					copy_flag = 0;
				}
				if (!(strcmp(word, &mass[0]) && strcmp(word, &mass[1])) && correct_flag)
				{
					copy_flag = 1;
				}
				if (*ptr == '{')
				{
					correct_flag = 0;
				}
				if (*ptr == '}')
				{
					correct_flag = 1;
				}
				for (k = 0; k < 10; k++)
				{
					if (!strcmp(word, &vPer[k]))
					{
						textAttribute = foregroundColor0;
						SetConsoleTextAttribute(hStdout, textAttribute);
					}
				}
				printf("%s", word);
				i = 0;
			}
			word[i++] = *ptr++;
		}
		if (i != 0)
		{
			word[i] = '\0';
			printf("%s", word);
		}
	}
	printf("\n");
	fclose(fp);
	system("pause");
}
